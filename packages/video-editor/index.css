@import url('./css/common.css');
@import url('./css/clip.css');
@import url('./css/media-trimmer.css');

:host {
  --black: #000;
  --white: #fff;
  --gray: #252525;
  --red-dark: #e83757;
  --red: #ff5372;
  --red-light: #ff7a92;
  --purple-dark: #8f54f9;
  --purple: #a06efb;
  --purple-light: #ac7dff;
  --yellow-dark: #ead627;
  --yellow: #feea38;
  --yellow-light: #fff38b;
  --green-dark: #03b072;
  --green: #03ad70;
  --green-light: #1ed291;
  --black-1: rgb(0 0 0 / 10%);
  --black-2: rgb(0 0 0 / 30%);
  --black-3: rgb(0 0 0 / 60%);
  --white-1: rgb(255 255 255 / 10%);
  --white-2: rgb(255 255 255 / 30%);
  --white-3: rgb(255 255 255 / 60%);
  --ruler-height: 1rem;
  --ruler-spacing-top: 0.25rem;
  --ruler-spacing-bottom: 2.625rem;
  --primary-bg: #171717;
  --primary-bg-05: #17171788;
}

.video-editor {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
  color: white;
  background-color: var(--primary-bg);

  .viewport {
    max-height: min(60vh, calc(100vh - 22rem));
    padding: 0.25rem;
  }

  .viewport-canvas {
    height: 100%;
  }
}

.settings-controls {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  justify-content: right;
  padding-top: max(env(safe-area-inset-p, 1.25rem), 1.25rem);
  padding-bottom: max(env(safe-area-inset-bottom, 1.25rem), 1.25rem);
}

.settings-button {
  width: 2.5rem;
  height: 2.5rem;
  font-size: 1.25rem;
}

.settings-content {
  position: absolute;
  top: 4rem;
  z-index: 10;
  display: none;
  padding: 0.5rem;
}

.settings-button,
.settings-content {
  background-color: var(--primary-bg-05);
  border-radius: 0.5rem;
}

.settings-controls.is-open .settings-content {
  display: block;
}

.playback-controls {
  position: absolute;
  bottom: 1rem;
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.secondary-toolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  margin-top: 0.25rem;
}

.secondary-toolbar-group {
  display: flex;
  gap: 0.5rem;
}

.secondary-toolbar-button {
  padding: 0.25rem;
  font-size: 1.5rem;
}

.actions {
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
}

.toolbar {
  position: relative;
  display: flex;
  flex-shrink: 0;
  gap: 0.5rem;
  align-items: flex-start;

  width: 100%;
  padding-top: 0.675rem;
  padding-bottom: 0.675rem;
  overflow-x: auto;
  color: var(--white);
}

.toolbar-button {
  flex-direction: column;
  align-self: stretch;
  justify-content: flex-start;
  width: 3rem;
  padding: 0.5rem;
  font-size: 0.75rem;
  text-align: center;

  &.active {
    color: var(--yellow);
  }

  .icon {
    font-size: 1.5rem;
  }
}

.filters-menu {
  --color-bg-button: var(--gray);
  --color-fnt-acc: var(--yellow);
  --gap-default: 0.25rem;
  --gap-top: 0.5rem;
}

.playback-play {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  font-size: 1.25rem;
}

.timeline {
  position: relative;
  flex-grow: 1;
  overflow: hidden;
}

.timeline-scroller {
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: auto hidden;
}

.timeline-scroller-child {
  position: relative;
  box-sizing: content-box;
  display: flex;
  flex-direction: column;
  width: var(--movie-width);
  height: 100%;
  padding: 0 calc(var(--timeline-width) / 2);
}

.timeline-playhead {
  position: absolute;
  top: calc(var(--ruler-spacing-top) + var(--ruler-height) + 0.5rem);
  left: calc(var(--timeline-width) / 2);
  z-index: 10;
  display: flex;
  user-select: none;
}

.timeline-playhead .time-pill {
  translate: calc(var(--time-pill-width) / -2);
}

.time-pill {
  display: flex;
  gap: 0.125rem;
  padding: 0.25rem 0.5rem;
  color: var(--black);
  text-align: center;
  background-color: var(--yellow);
  border-radius: 9999px;
}

.time-pill-right {
  opacity: 0.5;
}

.time-pill-drop {
  position: absolute;
  bottom: -0.5rem;
  left: calc(50% - 0.5rem);
  width: 1rem;
  height: 0.5rem;
  color: var(--yellow);
}

.timeline-cursor {
  position: absolute;
  top: calc(var(--ruler-spacing-bottom));
  bottom: 0;
  left: calc(var(--timeline-width) / 2 - 0.0625rem);
  z-index: 10;
  width: 0.125rem;
  pointer-events: none;
  background-color: var(--yellow);
}

.track-list {
  position: relative;
  display: flex;
  flex-shrink: 1;
  flex-direction: column;
  gap: 0.625rem;
  width: calc(var(--movie-width) + var(--timeline-width));
  min-height: calc(var(--clip-height) * 2.5);
  padding-bottom: 1rem;
  padding-left: calc(var(--timeline-width) / 2);
  overflow: hidden auto;
}

.track {
  position: relative;
  display: flex;
  height: var(--clip-height);
}

.add-clip {
  position: absolute;
  left: 1rem;
  display: flex;
  gap: 0.675rem;
  align-items: center;
  justify-content: center;
  min-width: var(--clip-height);
  height: var(--clip-height);
  padding: 0.675rem 0.875rem;
  color: var(--white-3);
  cursor: pointer;
  background-color: rgb(255 255 255 / 3%);
  border: dashed;
  border-color: rgb(255 255 255 / 12%);
  border-radius: 0.625rem;
  translate: var(--track-width);
}

.ruler {
  position: relative;
  flex-shrink: 0;
  width: 100%;
  width: calc(var(--timeline-width) + var(--movie-width));
  height: var(--ruler-height);
  margin-top: var(--ruler-spacing-top);
  margin-bottom: var(--ruler-spacing-bottom);
  overflow: hidden;
  color: var(--white-3);
}

.ruler-markings {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: var(--primary-bg);
  background-size: var(--ruler-interval) 100%;
  translate: var(--ruler-markings-offset);
}

.ruler-label {
  position: absolute;
  display: inline-block;
  padding-top: 0.25em;
  background-color: var(--primary-bg);
}

.loading-overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
  opacity: 0;

  transition: opacity 0.25s;

  &.loading {
    opacity: 1;
    transition-delay: 0.25s;
    animation: loading-spinner 2s linear infinite;
  }

  .icon {
    font-size: 2rem;
    background-color: var(--black-2);
    border-radius: 50%;
  }
}

@keyframes loading-spinner {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
